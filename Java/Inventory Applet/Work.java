/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.Scanner;

/**
 *
 * @author thwilliams
 */
public class Work extends javax.swing.JFrame {
    public String filename="Needs to be set";
    Gui a=new Gui();
    public int worksheet_num, num_of_sheets;
    public char mathorreading;
    public String level;
    /**
     * Creates new form Work
     */
    public Work(){
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Level = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        Get = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        Worksheet = new javax.swing.JTextField();
        MorR = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Inputfile = new javax.swing.JTextField();
        Num = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        Store = new javax.swing.JButton();
        LessThan = new javax.swing.JButton();
        PrintWholeLevel = new javax.swing.JButton();
        PrintAll = new javax.swing.JButton();
        numless = new javax.swing.JTextField();
        Output = new java.awt.TextArea();
        Add = new javax.swing.JButton();
        Remove = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Level");

        Get.setText("Get entry");
        Get.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GetActionPerformed(evt);
            }
        });

        jLabel2.setText("Worksheet");

        jLabel3.setText("(M)ath or (R)eading");

        jLabel4.setText("File to save to ");

        Inputfile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InputfileActionPerformed(evt);
            }
        });

        Num.setToolTipText("");

        jLabel5.setText("Number of worksheets");

        Store.setText("Enter new entry");
        Store.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StoreActionPerformed(evt);
            }
        });

        LessThan.setText("Less than x");
        LessThan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LessThanActionPerformed(evt);
            }
        });

        PrintWholeLevel.setText("Full level");
        PrintWholeLevel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintWholeLevelActionPerformed(evt);
            }
        });

        PrintAll.setText("Print all levels 1 subject");
        PrintAll.setActionCommand("");
        PrintAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintAllActionPerformed(evt);
            }
        });

        numless.setToolTipText("");

        Add.setText("Add worksheets");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Remove.setText("Remove worksheets");
        Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(MorR, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(62, 62, 62)
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(Inputfile, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(62, 62, 62)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE))
                                    .addComponent(Store, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(130, 130, 130))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Worksheet, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                                    .addComponent(Level))
                                .addGap(62, 62, 62)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addGap(176, 176, 176)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(numless, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(32, 32, 32)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(LessThan, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(PrintAll, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 333, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(Add, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Get, javax.swing.GroupLayout.DEFAULT_SIZE, 162, Short.MAX_VALUE)
                                        .addComponent(Num))
                                    .addGap(31, 31, 31)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(PrintWholeLevel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(Remove, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))))
                .addGap(31, 31, 31))
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(Output, javax.swing.GroupLayout.PREFERRED_SIZE, 739, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Level, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel5))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(Num, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LessThan)
                    .addComponent(Worksheet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(numless, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(MorR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Inputfile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 22, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(PrintWholeLevel)
                            .addComponent(Get))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(Add)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(Remove)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(PrintAll)
                    .addComponent(Store))
                .addGap(19, 19, 19)
                .addComponent(Output, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(251, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GetActionPerformed
        // TODO add your handling code here:
         //filename
        this.filename=Inputfile.getText();
        a.loadfile(filename);
        this.level=Level.getText();
        this.mathorreading=MorR.getText().charAt(0);
        this.worksheet_num=Integer.parseInt(Worksheet.getText());
        if(a.manageInput3args(this.mathorreading, this.level ,this.worksheet_num)){
                Output.setText(a.loadfile(this.filename)+"The number of worksheets is "+Integer.toString(a.getCount(this.level, this.worksheet_num,this.mathorreading)));
        }else{
            Output.setText(a.loadfile(this.filename)+"Error: Make sure you enter\n Whether the worksheet is math or reading\n The number of sheets \n The level to get them from");
        }  
    }//GEN-LAST:event_GetActionPerformed

    private void InputfileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InputfileActionPerformed
        this.filename=Inputfile.getText();
        Output.setText(a.loadfile(this.filename));
    }//GEN-LAST:event_InputfileActionPerformed

    private void StoreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StoreActionPerformed
        // TODO add your handling code here:
        this.filename=Inputfile.getText();
        a.loadfile(filename);
        this.level=Level.getText();
        this.mathorreading=MorR.getText().charAt(0);
        this.worksheet_num=Integer.parseInt(Worksheet.getText());
        this.num_of_sheets=Integer.parseInt(Num.getText());
        this.filename=Inputfile.getText();
        if(a.manageInputEntry4args(this.mathorreading, this.level, this.worksheet_num, this.num_of_sheets)){
                 Output.setText(a.setCount(this.level, this.num_of_sheets, this.worksheet_num, this.mathorreading)+a.savefile(this.filename));
        }else{
                Output.setText("Error: Double-check text boxes to make sure they match\nMake sure you enter\n Whether the worksheet is math or reading\n The number of sheets \n The level to get them from\nThe worksheet number(i.e. 131)");
        }
    }//GEN-LAST:event_StoreActionPerformed

    private void LessThanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LessThanActionPerformed
        // TODO add your handling code here:
        this.filename=Inputfile.getText();
        a.loadfile(filename);
        int b=Integer.parseInt(numless.getText());
        if(b<=30){
            Output.setText(a.lessThan(b));
        }else{
            Output.setText("Error: Make sure you enter a number \n and that it is less than 30 \n Double-check to make sure text boxes match\n");
        }
    }//GEN-LAST:event_LessThanActionPerformed

    private void PrintWholeLevelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintWholeLevelActionPerformed
        this.filename=Inputfile.getText();
        this.level=Level.getText();
        this.mathorreading=MorR.getText().charAt(0);
        Output.setText(a.loadfile(filename)+a.getFullLevel(this.level, this.mathorreading));
    }//GEN-LAST:event_PrintWholeLevelActionPerformed

    private void PrintAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintAllActionPerformed
        // TODO add your handling code here:
        this.level=Level.getText();
        this.mathorreading=MorR.getText().charAt(0);
        Output.setText(  a.loadfile(this.filename)+a.getAllSubjectLevels(this.mathorreading));
    }//GEN-LAST:event_PrintAllActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
        this.filename=Inputfile.getText();
        a.loadfile(filename);
        this.level=Level.getText();
        this.mathorreading=MorR.getText().charAt(0);
        this.worksheet_num=Integer.parseInt(Worksheet.getText());
        this.num_of_sheets=Integer.parseInt(Num.getText());
        this.filename=Inputfile.getText();
        if(a.manageInputEntry4args(this.mathorreading, this.level, this.worksheet_num, this.num_of_sheets)){
                 Output.setText(a.addCount(this.level, this.num_of_sheets, this.worksheet_num, this.mathorreading)+a.savefile(this.filename));
        }else{
                Output.setText("Error: Double-check text boxes to make sure they match\nMake sure you enter\n Whether the worksheet is math or reading\n The number of sheets \n The level to get them from\nThe worksheet number(i.e. 131)");
        }
    }//GEN-LAST:event_AddActionPerformed

    private void RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveActionPerformed
        // TODO add your handling code here:
        this.filename=Inputfile.getText();
        a.loadfile(filename);
        this.level=Level.getText();
        this.mathorreading=MorR.getText().charAt(0);
        this.worksheet_num=Integer.parseInt(Worksheet.getText());
        this.num_of_sheets=Integer.parseInt(Num.getText());
        this.filename=Inputfile.getText();
        if(a.manageInputEntry4args(this.mathorreading, this.level, this.worksheet_num, this.num_of_sheets)){
                 Output.setText(a.removeCount(this.level, this.num_of_sheets, this.worksheet_num, this.mathorreading)+a.savefile(this.filename));
        }else{
                Output.setText("Error: Double-check text boxes to make sure they match\nMake sure you enter\n Whether the worksheet is math or reading\n The number of sheets \n The level to get them from\nThe worksheet number(i.e. 131)");
        }
    }//GEN-LAST:event_RemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Work().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Get;
    private javax.swing.JTextField Inputfile;
    private javax.swing.JButton LessThan;
    private javax.swing.JTextField Level;
    private javax.swing.JTextField MorR;
    private javax.swing.JTextField Num;
    private java.awt.TextArea Output;
    private javax.swing.JButton PrintAll;
    private javax.swing.JButton PrintWholeLevel;
    private javax.swing.JButton Remove;
    private javax.swing.JButton Store;
    private javax.swing.JTextField Worksheet;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField numless;
    // End of variables declaration//GEN-END:variables
}
